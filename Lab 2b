# Python Exercises: Literals, Data Types, Operator Precedence

# 1. Literals
# Predict the output of each print statement without using Python
# Aim for ~80% accuracy, then verify with Python

print(5 + 2 - 2)
# 5

print(5 / 2)
# 2.5

print(6 // 2)  # // integer division
# 3

print(2. * 3)
# 6.0

print(2 < 4)
# True

print(2 >= 2)
# True

print("Hello" + "World")
# HelloWorld

print("bla" * 3)
# blablabla

print(2 * 3 ** 3)
# 54

print(5 * 25 // 13 + 100 / 2 % 13 // 2)
# 13.0

print(2 * 3 % 5)
# 1

print((2 % -4), (2 % 4), (2 ** 3 ** 2))
# 2 2 512

# 2. Data Types
# Predict the data type of each expression

type("Hello")
# <class 'str'>

type(1 + "2")
# Error: unsupported operand types for +: 'int' and 'str'

type(1.)
# <class 'float'>

type('A')
# <class 'str'>

type(500)
# <class 'int'>

type(True)
# <class 'bool'>

type("False")
# <class 'str'>

# 3. Operator Precedence
# a) Example arithmetic expression using multiple operator types:
expression = 5 * 25 % 13 + 100 / -2 * 13 // 2 ** 3
# b) Predicted output without using Python
# -62.0
# c) Verify using Python
# (Run expression in Python to confirm)

# Operator Precedence Reference Table
# Priority   Operator   Notes
# 1          **         Right to left evaluation
# 2          +, -       Unary operators (located next to the right of power operator bind more strongly)
# 3          *, /, //, %  Left to right evaluation
# 4          +, -       Binary

# Challenges
# 1. Remembering the difference between '/' and '//' and predicting the output accurately for float vs integer division.
# 2. Understanding operator precedence, especially with expressions that combine **, %, //, *, /, +, and -.
# 3. Combining different data types (int, float, str, bool) in expressions, which can lead to type errors.
# 4. Predicting results of power operations (**), particularly when chained like 2 ** 3 ** 2.
# 5. Debugging errors when trying to perform operations with incompatible types, like 1 + "2".
# 6. Remembering that string multiplication and concatenation behave differently from numeric operations.
